name: Multi-Module CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# AWS ÏÑ§Ï†ï Ï†ïÎ≥¥
env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: public.ecr.aws/o3q0p5x7

# 1Îã®Í≥Ñ: Î≥ÄÍ≤ΩÎêú ÌååÏùº Í∞êÏßÄ
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.changes }}
      common-changed: ${{ steps.filter.outputs.common }}
      order: ${{ steps.filter.outputs.order }}
      product: ${{ steps.filter.outputs.product }}
      review: ${{ steps.filter.outputs.review }}
      search: ${{ steps.filter.outputs.search }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            common:
              - 'common/**'
              - 'build.gradle.kts'
              - 'settings.gradle.kts'
            order:
              - 'service/order/**'
            product:
              - 'service/product/**'
            review:
              - 'service/review/**'
            search:
              - 'service/search/**'
          list-files: shell
      - name: Debug Outputs
        run: |
          echo "Common Changed: ${{ steps.filter.outputs.common }}"
          echo "Order Changed: ${{ steps.filter.outputs.order }}"
          echo "Product Changed: ${{ steps.filter.outputs.product }}"
          echo "Review Changed: ${{ steps.filter.outputs.review }}"
          echo "Search Changed: ${{ steps.filter.outputs.search }}"


  # 2Îã®Í≥Ñ: ÏÑúÎπÑÏä§Î≥Ñ Î≥ëÎ†¨ ÎπåÎìú
  build-services:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main' && 
      needs.build-and-test.result == 'success' &&
      (needs.detect-changes.outputs.common-changed == 'true' || 
       needs.detect-changes.outputs.order == 'true' || 
       needs.detect-changes.outputs.product == 'true' || 
       needs.detect-changes.outputs.review == 'true' || 
       needs.detect-changes.outputs.search == 'true')
    strategy:
      fail-fast: false
      matrix:
        service: [order, product, review, search]  # Îã®ÏàúÌôî
    steps:
      - name: Skip if no changes
        if: |
          (matrix.service == 'order' && needs.detect-changes.outputs.common-changed != 'true' && needs.detect-changes.outputs.order != 'true') ||
          (matrix.service == 'product' && needs.detect-changes.outputs.common-changed != 'true' && needs.detect-changes.outputs.product != 'true') ||
          (matrix.service == 'review' && needs.detect-changes.outputs.common-changed != 'true' && needs.detect-changes.outputs.review != 'true') ||
          (matrix.service == 'search' && needs.detect-changes.outputs.common-changed != 'true' && needs.detect-changes.outputs.search != 'true')
        run: |
          echo "No changes detected for ${{ matrix.service }}, skipping..."
          exit 0

      - name: Checkout code
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        uses: actions/checkout@v4

      - name: Set up JDK 21
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and test service
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        run: |
          echo "üî® Building ${{ matrix.service }} service..."
          chmod +x ./gradlew
          ./gradlew :service:${{ matrix.service }}:build :service:${{ matrix.service }}:test

      - name: Configure AWS credentials
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Create ECR Repository if not exists
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        run: |
          aws ecr-public describe-repositories --repository-names ${{ matrix.service }} --region ${{ env.AWS_REGION }} || \
          aws ecr-public create-repository --repository-name ${{ matrix.service }} --region ${{ env.AWS_REGION }}

      - name: Build Docker image
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        run: | 
          echo "üê≥ Building Docker image for ${{ matrix.service }}..."
          docker build -t $ECR_REGISTRY/${{ matrix.service }}:${{ github.sha }} -f service/${{ matrix.service }}/Dockerfile .
          docker tag $ECR_REGISTRY/${{ matrix.service }}:${{ github.sha }} $ECR_REGISTRY/${{ matrix.service }}:latest

      - name: Push to ECR Public
        if: |
          (matrix.service == 'order' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.order == 'true')) ||
          (matrix.service == 'product' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.product == 'true')) ||
          (matrix.service == 'review' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.review == 'true')) ||
          (matrix.service == 'search' && (needs.detect-changes.outputs.common-changed == 'true' || needs.detect-changes.outputs.search == 'true'))
        run: | 
          echo "üöÄ Pushing images for ${{ matrix.service }}..."
          docker push $ECR_REGISTRY/${{ matrix.service }}:latest
          echo "‚úÖ ${{ matrix.service }} Ïù¥ÎØ∏ÏßÄ Ìë∏Ïãú ÏôÑÎ£å!"

  # 4Îã®Í≥Ñ: ÎπåÎìú Í≤∞Í≥º ÏöîÏïΩ
  build-summary:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-services]
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## üöÄ Multi-Module CI Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Service | Status | Changed |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Order | ${{ needs.detect-changes.outputs.order == 'true' && 'built' || 'skipped' }} | ${{ needs.detect-changes.outputs.order }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Product | ${{ needs.detect-changes.outputs.product == 'true' && 'built' || 'skipped' }} | ${{ needs.detect-changes.outputs.product }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Review | ${{ needs.detect-changes.outputs.review == 'true' && 'built' || 'skipped' }} | ${{ needs.detect-changes.outputs.review }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Search | ${{ needs.detect-changes.outputs.search == 'true' && 'built' || 'skipped' }} | ${{ needs.detect-changes.outputs.search }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Build Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Common Changed**: ${{ needs.detect-changes.outputs.common-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Has Changes**: ${{ needs.prepare-matrix.outputs.has-changes }}" >> $GITHUB_STEP_SUMMARY